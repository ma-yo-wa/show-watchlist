{"version":3,"sources":["components/Home.jsx","components/Search.jsx","components/Show.jsx","components/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","withRouter","location","shows","JSON","parse","localStorage","getItem","map","show","src","alt","Images","Image","Input","input","InputContainer","Search","React","useState","query","setQuery","tvShows","setTvShows","useEffect","axios","get","then","response","data","catch","error","console","onChange","e","target","value","tvShow","image","medium","to","pathname","state","title","name","type","summary","Summary","Button","button","img","isShowAdded","setIsShowAdded","log","style","marginTop","dangerouslySetInnerHTML","__html","onClick","watchlist","setItem","stringify","pop","push","Links","StyledLink","NavLink","props","activeClassName","Divider","Nav","exact","App","path","component","Home","Show","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2733cb24.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst Home = ({ location }) => {\n  const shows = JSON.parse(localStorage.getItem(\"shows\"));\n\n  return (\n    <>\n      {!shows ? (\n        <p>You don't have any shows in your watchlist</p>\n      ) : (\n        <div>\n          <Container>\n            {shows.map((show) => (\n              <img src={show} alt=\"\" />\n            ))}\n          </Container>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(Home);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst Images = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst Image = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n  width: 400px;\n  height: 30px;\n  vertical-align: middle;\n  margin-bottom: 40px;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Search = () => {\n  const [query, setQuery] = React.useState(\"\");\n  const [tvShows, setTvShows] = React.useState([]);\n  const dummyImage = \"https://ipsumimage.appspot.com/210x295?l=No%20Image%20Found\";\n\n  React.useEffect(() => {\n    axios\n      .get(`http://api.tvmaze.com/search/shows?q=${query}`)\n      .then((response) => {\n        setTvShows(response.data);\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  }, [query]);\n\n  return (\n    <>\n      <InputContainer>\n        <Input onChange={(e) => setQuery(e.target.value)} />\n      </InputContainer>\n      <Images>\n        {tvShows.map((tvShow) =>\n          !tvShow.show.image?.medium ? (\n            <Image>\n              <img src={dummyImage} alt=\"\" />\n            </Image>\n          ) : (\n            <Link\n              to={{\n                pathname: `/show`,\n                state: {\n                  image: tvShow.show.image?.medium,\n                  title: tvShow.show.name,\n                  type: tvShow.show.type,\n                  summary: tvShow.show.summary,\n                },\n              }}\n            >\n              <Image>\n                <img src={tvShow.show.image?.medium} alt=\"\" />\n              </Image>\n            </Link>\n          )\n        )}\n      </Images>\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Summary = styled.div`\n  width: 70%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Button = styled.button`\n  padding: 0.5em 0.7em;\nâ€ƒ font-weight: 300;\n  margin-top: 25px;\n`;\n\nconst Image = styled.img`\n  margin-right: 20px;\n`;\n\nconst Show = ({ location }) => {\n  const show = location.state;\n  const [isShowAdded, setIsShowAdded] = React.useState(false);\n\n  console.log(show.image, \"here\");\n\n  const addToWatchlist = () => {\n    let shows = localStorage.getItem(\"shows\");\n    shows = !!shows ? JSON.parse(localStorage.getItem(\"shows\")) : [];\n    shows.push(show.image);\n\n    localStorage.setItem(\"shows\", JSON.stringify(shows));\n\n    setIsShowAdded(true);\n  };\n\n  const removeFromWatchList = () => {\n    let watchlist = localStorage.getItem(\"show\");\n    watchlist = JSON.parse(watchlist);\n    localStorage.setItem(\"shows\", JSON.stringify(watchlist.pop));\n    setIsShowAdded(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <Image src={show.image} alt=\"\" />\n        <div>\n          <p style={{marginTop: 0}}>{show.title}</p>\n          <b>{show.type}</b>\n          <Summary dangerouslySetInnerHTML={{ __html: show.summary }} />\n        </div>\n      </Container>\n      {isShowAdded ? (\n        <Button onClick={removeFromWatchList}>Remove from the list</Button>\n      ) : (\n        <Button onClick={addToWatchlist}>Add To Watchlist</Button>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(Show);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Links = styled.div`\n  display: flex;\n`;\n\nconst StyledLink = styled(NavLink)`\n  margin-right: 30px;\n  text-decoration: none;\n  color: black;\n  &.${props => props.activeClassName} {\n    color: blue;\n  }\n`;\n\nexport const Divider = styled.div`\n  width: 100%;\n  margin: 20px 0px;\n  border: 1px solid #ebe6df;\n`;\n\nconst Nav = () => {\n  return (\n    <Container>\n      <Links>\n        <StyledLink activeClassName=\"active\" exact to=\"/\">\n          Home\n        </StyledLink>\n        <StyledLink activeClassName=\"active\" to=\"/search\">Search</StyledLink>\n      </Links>\n      <Divider />\n    </Container>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport Home from \"./components/Home\";\nimport Search from \"./components/Search\";\nimport Show from \"./components/Show\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/show\" component={Show} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}